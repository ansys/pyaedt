name: GitHub CI CD
on:
  pull_request:
    # GitHub default types + ready_for_review to trigger the workflow on PRs no longer in draft mode.
    # See https://github.com/ansys/pyaedt/issues/5223 for more information
    types: [opened, synchronize, reopened, ready_for_review]
  workflow_dispatch:
  push:
    tags:
      - "*"
    branches:
      - main

env:
  ANSYSLMD_LICENSE_FILE: ${{ format('1055@{0}', secrets.LICENSE_SERVER) }}
  MAIN_PYTHON_VERSION: '3.13'
  PACKAGE_NAME: 'PyAEDT'
  DOCUMENTATION_CNAME: 'aedt.docs.pyansys.com'
  ON_CI: True
  PYTEST_ARGUMENTS: '-vvv --color=yes -ra --durations=25 --maxfail=10 --cov=ansys.aedt.core --cov-report=html --cov-report=xml --junitxml=junit/test-results.xml'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  system-tests-visualization-windows:
    name: Testing and coverage Visualization (Windows)
    if: github.event.pull_request.draft == false
    runs-on: [ self-hosted, Windows, pyaedt ]
    steps:
      - name: Install Git and checkout project
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}

      - name: Set up headless display
        uses: pyvista/setup-headless-display-action@f744438e29e50189f40f1749859bac7d0f69b5fa # v4.1

      - name: Create virtual environment
        run: |
          python -m venv .venv
          .venv\Scripts\Activate.ps1
          python -m pip install pip -U
          python -m pip install wheel setuptools -U
          python -c "import sys; print(sys.executable)"

      - name: Install pyaedt and tests dependencies
        run: |
          .venv\Scripts\Activate.ps1
          pip install .[tests]

      - name: Run tests marked with 'visualization'
        uses: nick-fields/retry@ce71cc2ab81d554ebbe88c79ab5975992d79ba08 # v3.0.2
        env:
          PYTHONMALLOC: malloc
        with:
          max_attempts: 2
          retry_on: error
          timeout_minutes: 120
          command: |
            .venv\Scripts\Activate.ps1
            pytest ${{ env.PYTEST_ARGUMENTS }} --timeout=600 tests/system/visualization/test_46_FarField.py tests/system/visualization/test_12_PostProcessing.py

      - uses: codecov/codecov-action@ad3126e916f78f00edff4ed0317cf185271ccc2d # v5.4.2
        with:
          name: codecov-system-visualization-tests-windows
          files: ./coverage.xml
          flags: windows_system_visualization

      - name: Upload pytest test results
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: pytest-visualization-windows
          path: junit/test-results.xml
        if: ${{ always() }}

# # =================================================================================================
# # vvvvvvvvvvvvvvvvvvvvvvvvvvvvvv    RUNNING ON SELF-HOSTED RUNNER    vvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
# # =================================================================================================

  system-tests-visualization-linux:
    name: Testing and coverage visualization(Linux)
    if: github.event.pull_request.draft == false
    runs-on: [ self-hosted, Linux, pyaedt ]
    env:
      ANSYSEM_ROOT251: '/opt/AnsysEM/v251/AnsysEM'
      ANS_NODEPCHECK: '1'
    steps:
      - name: Install Git and checkout project
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}

      - name: Set up headless display
        uses: pyvista/setup-headless-display-action@f744438e29e50189f40f1749859bac7d0f69b5fa # v4.1

      - name: Create virtual environment
        run: |
          export LD_LIBRARY_PATH=${{ env.ANSYSEM_ROOT251 }}/common/mono/Linux64/lib64:$LD_LIBRARY_PATH
          python -m venv .venv
          source .venv/bin/activate
          python -m pip install --trusted-host pypi.org --trusted-host pypi.python.org --trusted-host files.pythonhosted.org pip -U
          python -m pip install --trusted-host pypi.org --trusted-host pypi.python.org --trusted-host files.pythonhosted.org wheel setuptools -U
          python -c "import sys; print(sys.executable)"

      - name: Install pyaedt and tests dependencies
        run: |
          export LD_LIBRARY_PATH=${{ env.ANSYSEM_ROOT251 }}/common/mono/Linux64/lib64:$LD_LIBRARY_PATH
          source .venv/bin/activate
          pip install .[tests]

      - name: Run tests marked with 'visualization'
        uses: nick-fields/retry@ce71cc2ab81d554ebbe88c79ab5975992d79ba08 # v3.0.2
        with:
          max_attempts: 2
          retry_on: error
          timeout_minutes: 120
          command: |
            export LD_LIBRARY_PATH=${{ env.ANSYSEM_ROOT251 }}/common/mono/Linux64/lib64:$LD_LIBRARY_PATH
            source .venv/bin/activate
            pytest ${{ env.PYTEST_ARGUMENTS }} --timeout=600 tests/system/visualization/test_46_FarField.py::TestClass::test_04_far_field_data_plotter tests/system/visualization/test_12_PostProcessing.py::TestClass::test_sbr_plot_scene

      - uses: codecov/codecov-action@ad3126e916f78f00edff4ed0317cf185271ccc2d # v5.4.2
        with:
          name: codecov-system-visualization-tests-linux
          files: ./coverage.xml
          flags: linux_system_visualization

      - name: Upload pytest test results
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: pytest-visualization-linux
          path: junit/test-results.xml
        if: ${{ always() }}
