name: Nightly Documentation Build

on:
  workflow_dispatch:
  schedule:  # UTC at 0400
    - cron:  '0 4 * * *'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  docs_build:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v3

      # used for documentation deployment
      - name: Get Bot Application Token
        id: get_workflow_token
        uses: peter-murray/workflow-application-token-action@v2
        with:
          application_id: ${{ secrets.BOT_APPLICATION_ID }}
          application_private_key: ${{ secrets.BOT_APPLICATION_PRIVATE_KEY }}

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Install pyaedt
        run: |
          pip install .

      - name: Install doc build requirements
        run: |
          pip install -r requirements_docs.txt

      - name: Full Documentation Build
        run: |
          make -C doc phtml
          touch doc/_build/html/.nojekyll
          echo "dev.aedt.docs.pyansys.com" >> doc/_build/html/CNAME

      - name: Upload Documentation
        uses: actions/upload-artifact@v3
        with:
          name: Documentation
          path: doc/_build/html
          retention-days: 7

      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@v4.4.1
        with:
          repository-name: pyansys/pyaedt-dev-docs
          branch: gh-pages
          folder: doc/_build/html/
          token: ${{ steps.get_workflow_token.outputs.token }}
          clean: true

  # docstring_testing:
  #   runs-on: Windows

  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Setup Python
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: 3.8

  #     - name: 'Create virtual env'
  #       run: |
  #         python -m venv testenv
  #         testenv\Scripts\Activate.ps1
  #         python -m pip install pip -U
  #         python -m pip install wheel setuptools -U
  #         python -c "import sys; print(sys.executable)"

  #     - name: 'Install pyaedt'
  #       run: |
  #         testenv\Scripts\Activate.ps1
  #         pip install . --use-feature=in-tree-build
  #         cd _unittest
  #         python -c "import pyaedt; print('Imported pyaedt')"

  #     - name: Install testing requirements
  #       run: |
  #         testenv\Scripts\Activate.ps1
  #         pip install -r requirements_test.txt
  #         pip install pytest-azurepipelines

  #     - name: Docstring testing
  #       run: |
  #         testenv\Scripts\Activate.ps1
  #         pytest -v pyaedt/desktop.py pyaedt/icepak.py
  #         pytest -v pyaedt/desktop.py pyaedt/hfss.py
