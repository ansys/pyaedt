# This is a basic workflow to help you get started with Actions

name: FullDocumentation

env:
  python.version: 3.8
  python.venv: 'testvenv'
  DOCUMENTATION_CNAME: 'aedt.docs.pyansys.com'
  MEILISEARCH_API_KEY: ${{ secrets.MEILISEARCH_API_KEY }}
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    tags:
     - v*
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
      tags:
        description: 'Test scenario tags'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  full_documentation:
    # The type of runner that the job will run on
    name: full_documentation
    runs-on: [windows-latest, pyaedt]
    strategy:
      matrix:
        python-version: [3.8]
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: 'Create virtual env'
        run: |
          python -m venv testenv
          testenv\Scripts\Activate.ps1
          python -m pip install pip -U
          python -m pip install wheel setuptools -U
          python -c "import sys; print(sys.executable)"

      - name: 'Install pyaedt'
        run: |
          testenv\Scripts\Activate.ps1
          pip install .[doc]
          Copy-Item -Path "C:\actions-runner\opengl32.dll" -Destination "testenv\Lib\site-packages\vtkmodules" -Force

      - name: Retrieve PyAEDT version
        id: version
        run: |
          testenv\Scripts\Activate.ps1
          echo "::set-output name=PYAEDT_VERSION::$(python -c "from pyaedt import __version__; print(__version__)")"
          echo "PyAEDT version is: $(python -c "from pyaedt import __version__; print(__version__)")"

      - name: Create Documentations
        run: |
          testenv\Scripts\Activate.ps1
          sphinx-build -j auto --color -b html -a doc/source doc/_build/html

      - name: Upload HTML documentation artifact
        uses: actions/upload-artifact@v3
        with:
          name: documentation-html
          path: doc/_build/html
          retention-days: 7

  doc-deploy-stable:
    name: Deploy stable documentation
    runs-on: ubuntu-latest
    needs: full_documentation
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags')
    steps:
      - name: Deploy the stable documentation
        uses: ansys/actions/doc-deploy-stable@v4
        with:
          cname: ${{ env.DOCUMENTATION_CNAME }}
          token: ${{ secrets.GITHUB_TOKEN }}
          python-version: ${{ matrix.python-version }}
