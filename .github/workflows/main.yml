# This is a basic workflow to help you get started with Actions

name: Publish

env:
  python.version: 3.8
  python.venv: 'testvenv'
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    tags:
     - v*
    
     
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  publish:
    # The type of runner that the job will run on
    runs-on: self-hosted
    strategy:
      matrix:
        python-version: [3.8]
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: 'Create virtual env'
        run: |
          python -m venv testenv
          testenv\Scripts\Activate.ps1
          python -m pip install pip -U
          python -m pip install wheel setuptools -U
          python -c "import sys; print(sys.executable)"
      - name: 'Install pyaedt'
        run: |
          testenv\Scripts\Activate.ps1
          pip install . --use-feature=in-tree-build
          pip install -r requirements_test.txt
          pip install pytest-azurepipelines
          mkdir tmp
          cd tmp
          python -c "import pyaedt; print('Imported pyaedt')"
      - name: 'Unit testing'
        run: | 
          testenv\Scripts\Activate.ps1
          pytest -v --cov=pyaedt --cov=_unittest --cov-config=.coveragerc -cov-report=xml --junitxml=junit/test-results.xml _unittest -p no:faulthandler
        
      - name: 'Build and validate source distribution'
        run: |
          testenv\Scripts\Activate.ps1
          python setup.py sdist
          python -m pip install twine
          python -m twine check dist/*
        
      - name: Publish package
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
          
