# This is a basic workflow to help you get started with Actions

name: FullDocumentation

env:
  python.version: 3.8
  python.venv: 'testvenv'
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    tags:
     - v*
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'     
        required: true
        default: 'warning'
      tags:
        description: 'Test scenario tags'     
     
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  full_documentation:
    # The type of runner that the job will run on
    runs-on: self-hosted
    strategy:
      matrix:
        python-version: [3.8]
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: 'Create virtual env'
        run: |
          python -m venv testenv
          testenv\Scripts\Activate.ps1
          python -m pip install pip -U
          python -m pip install wheel setuptools -U
          python -c "import sys; print(sys.executable)"
          
      - name: 'Install pyaedt'
        run: |
          testenv\Scripts\Activate.ps1
          pip install -r requirements.txt
          pip install -r requirements_docs.txt
          Copy-Item -Path "C:\actions-runner\opengl32.dll" -Destination "testenv\Lib\site-packages\vtkmodules" -Force
 
        #if: startsWith(github.event.ref, 'refs/heads/main') != true
      
      - name: 'Create Documentations'      
        run: |
          testenv\Scripts\Activate.ps1
          sphinx-build -j auto -b html -a doc/source doc/_build/html 
          
      - name: ' Deploy on aedtdocs.pyansys.com'
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        working-directory: doc/_build/html
        run: |
          git init
          git checkout -b master
          git config --local user.name "maxcapodi78"
          git config --local user.email "massimo.capodiferro@ansys.com"
          New-Item -ItemType file .nojekyll
          New-Item -ItemType file CNAME
          Add-Content CNAME "aedtdocs.pyansys.com"
          git add .
          git commit -m "Documentation generated by PyAedt Build"
          git remote add origin https://${{ secrets.PYAEDT_DOCS }}@github.com/pyansys/PyAEDT-docs
          git push -u origin master --force


      #- name: Upload Documentation
      #  uses: actions/upload-artifact@v2.2.3
      #  with:
      #    name: Documentation
      #    path: doc/_build/html
      #    retention-days: 7

      #- name: Deploy
      #  if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
      #  uses: JamesIves/github-pages-deploy-action@4.1.4
      #  with:
      #  repository-name: pyansys/pyaedt-docs
      #   branch: master
      #    folder: doc/_build/html/
      #    token: ${{ secrets.PYANSYS_CI_BOT_TOKEN }}
      #    clean: true
