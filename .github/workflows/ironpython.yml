# This is a basic workflow to help you get started with Actions

name: CI_Ironpython


# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  pull_request:
    branches: [ main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: [Windows, self-hosted, pyaedt]
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v4

      - name: 'Run Unit Tests in Ironpython'
        timeout-minutes: 60
        run: |
          $processA = start-process 'cmd' -ArgumentList '/c .\_unittest_ironpython\run_unittests_batchmode.cmd' -PassThru
          $processA.WaitForExit()
          get-content .\_unittest_ironpython\pyaedt_unit_test_ironpython.log
          $test_errors_failures = Select-String -Path .\_unittest_ironpython\pyaedt_unit_test_ironpython.log -Pattern "TextTestResult errors="
          if ($test_errors_failures -ne $null)
          {
          exit 1
          }
          else
          {
          exit 0
          }
