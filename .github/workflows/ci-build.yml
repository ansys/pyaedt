name: Documentation Build

on: [pull_request, workflow_dispatch]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  docs-style:
    name: Documentation Style Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
  
      - name: Running Vale
        uses: errata-ai/vale-action@reviewdog
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          files: doc
          reporter: github-pr-check
          level: error
          filter_mode: nofilter
          fail_on_error: true
          vale_flags: "--config=doc/.vale.ini"

  docs_build:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Install pyaedt
        run: |
          pip install .

      - name: Verify pyaedt can be imported
        run: python -c "import pyaedt"

      - name: Install doc build requirements
        run: |
          pip install -r requirements_docs.txt
          sudo apt install graphviz

      # run doc build, without creating the examples directory
      # note that we have to add the examples file here since it won't
      # be created as gallery is disabled on linux.
      - name: Documentation Build
        run: |
          mkdir doc/source/examples -p
          echo $'Examples\n========' > doc/source/examples/index.rst
          make -C doc html SPHINXOPTS="-j auto -w build_errors.txt -N"

      - name: Build json documentation
        run: |
          # Export the documentation files to JSON files.
          sphinx-build -M json doc/source doc-json -j auto -w build_errors.txt -N;

      - name: Flatten the generated nested files into a single directory
        run: |
          echo Flattening a nested directory
          mkdir doc-flatten-json;
          echo Move all the JSON file to the flatten directory.
          find . -name "*.fjson" -exec mv "{}" --backup=numbered ./doc-flatten-json \;
          echo Make sure all the file has .json extensions instead of the .fjson
          for file in doc-flatten-json/*.fjson ; do mv -- "$file" "${file%.fjson}.json" ; done;
          echo Move all static image files to the JSON flatten folder.
          mv doc-json/json/_images doc-flatten-json/_images;

      - name: zip the flattened JSON directory
        run: |
          zip -r pyaedt-doc-flatten-json.zip doc-flatten-json;
          mkdir pyaedt-doc-flatten-json;
          mv pyaedt-doc-flatten-json.zip pyaedt-doc-flatten-json;
          echo Clean up build directories after the process is completed.
          rm -rf doc-json doc-flatten-json;

      - name: Upload json Documentation
        uses: actions/upload-artifact@v3
        with:
          name: pyaedt-doc-flatten-json.zip
          path: pyaedt-doc-flatten-json.zip
          retention-days: 7

      - name: Get Bot Application Token
        id: get_workflow_token
        uses: peter-murray/workflow-application-token-action@v2
        with:
          application_id: ${{ secrets.BOT_APPLICATION_ID }}
          application_private_key: ${{ secrets.BOT_APPLICATION_PRIVATE_KEY }}

      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@v4.4.1
        with:
          repository-name: pyansys/devportal-doc-archive
          branch: drupal
          folder: pyaedt-doc-flatten-json
          token: ${{ steps.get_workflow_token.outputs.token }}
          clean: false

      # Verify that sphinx generates no warnings
      - name: Check for warnings
        run: |
          python doc/print_errors.py

#      - name: Upload Documentation
#        uses: actions/upload-artifact@v3
#        with:
#          name: Documentation
#          path: doc/_build/html
#          retention-days: 7
