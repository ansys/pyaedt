name: CI

env:
  python.version: '3.10'
  python.venv: 'testvenv'
  # Following env vars when changed will "reset" the mentioned cache,
  # by changing the cache file name. It is rendered as ...-v%RESET_XXX%-...
  # You should go up in number, if you go down (or repeat a previous value)
  # you might end up reusing a previous cache if it hasn't been deleted already.
  # It applies 7 days retention policy by default.
  RESET_PIP_CACHE: 0
  PACKAGE_NAME: PyAEDT
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    tags:
     - 'v*'
    branches:
      - main
  pull_request:
    branches: [ main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build_solvers:
    # The type of runner that the job will run on
    runs-on: [ windows-latest, pyaedt ]
    strategy:
      matrix:
        python-version: [ '3.10' ]
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: 'Create virtual env'
        run: |
          Remove-Item D:\Temp\* -Recurse -Force -ErrorAction SilentlyContinue
          python -m venv testenv_s
          testenv_s\Scripts\Activate.ps1
          python -m pip install pip -U
          python -m pip install wheel setuptools -U
          python -c "import sys; print(sys.executable)"

      - name: 'Install pyaedt'
        run: |
          testenv_s\Scripts\Activate.ps1
          pip install .
          pip install .[tests]
          pip install pytest-azurepipelines
          Copy-Item -Path "C:\actions-runner\opengl32.dll" -Destination "testenv_s\Lib\site-packages\vtkmodules" -Force
          mkdir tmp
          cd tmp
          python -c "import pyaedt; print('Imported pyaedt')"

      # - name: "Check licences of packages"
      #   uses: pyansys/pydpf-actions/check-licenses@v2.0

      - name: ""
        run: |
          testenv_s\Scripts\Activate.ps1
          Set-Item -Path env:PYTHONMALLOC -Value "malloc"
          python examples/00-EDB/03_5G_antenna_example_parametrics.py

