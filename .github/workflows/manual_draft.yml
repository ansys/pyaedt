name: Draft workflow

on:
  workflow_dispatch:
    inputs:
      test-solvers-windows:
        description: "Testing solvers and coverage (Windows)"
        default: 'no'
        type: choice
        options:
          - 'yes'
          - 'no'
      test-solvers-linux:
        description: "Testing solvers and coverage (Linux)"
        default: 'no'
        type: choice
        options:
          - 'yes'
          - 'no'
      test-general-windows:
        description: "Testing general and coverage (Windows)"
        default: 'no'
        type: choice
        options:
          - 'yes'
          - 'no'
      test-general-linux:
        description: "Testing general and coverage (Linux)"
        type: choice
        default: 'no'
        options:
          - 'yes'
          - 'no'

env:
  MAIN_PYTHON_VERSION: '3.10'
  PYTEST_ARGUMENTS: '-vvv --color=yes -ra --durations=25 --maxfail=10 --cov=ansys.aedt.core --cov-report=html --cov-report=xml --junitxml=junit/test-results.xml'

jobs:

  system-test-solvers-windows:
    name: Testing solvers and coverage (Windows)
    if: github.event.inputs.test-solvers-windows == 'yes'
    runs-on: [ self-hosted, Windows, pyaedt ]
    steps:
      - name: Install Git and checkout project
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Setup Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}

      - name: Create virtual environment
        run: |
          python -m venv .venv
          .venv\Scripts\Activate.ps1
          python -m pip install pip -U
          python -m pip install wheel setuptools -U
          python -c "import sys; print(sys.executable)"

      - name: Install pyaedt and tests dependencies
        run: |
          .venv\Scripts\Activate.ps1
          pip install .[tests]
          pip install pytest-azurepipelines

      - name: Install CI dependencies (e.g. vtk-osmesa)
        run: |
          .venv\Scripts\Activate.ps1
          # Uninstall conflicting dependencies
          pip uninstall --yes vtk
          pip install --extra-index-url https://wheels.vtk.org vtk-osmesa==9.3.1

      - name: Run tests marked with 'solvers'
        env:
          PYTHONMALLOC: malloc
        run: |
          .venv\Scripts\Activate.ps1
          pytest ${{ env.PYTEST_ARGUMENTS }} -m solvers

      - uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7 # v5.5.1
        with:
          name: codecov-system-solvers-tests-windows
          files: ./coverage.xml
          flags: system,solvers,windows

      - name: Upload pytest test results
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: pytest-solvers-windows
          path: junit/test-results.xml
        if: ${{ always() }}

  system-test-solvers-linux:
    name: Testing solvers and coverage (Linux)
    if: github.event.inputs.test-solvers-linux == 'yes'
    runs-on: [ self-hosted, Linux, pyaedt ]
    env:
      ANSYSEM_ROOT252: '/usr/ansys_inc/v252/AnsysEM'
      ANS_NODEPCHECK: '1'
    steps:  
      - name: Install Git and checkout project
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Setup Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}

      - name: Create virtual environment
        run: |
          export LD_LIBRARY_PATH=${{ env.ANSYSEM_ROOT252 }}/common/mono/Linux64/lib64:$LD_LIBRARY_PATH
          python -m venv .venv
          source .venv/bin/activate
          python -m pip install --trusted-host pypi.org --trusted-host pypi.python.org --trusted-host files.pythonhosted.org pip -U
          python -m pip install --trusted-host pypi.org --trusted-host pypi.python.org --trusted-host files.pythonhosted.org wheel setuptools -U
          python -c "import sys; print(sys.executable)"

      - name: Install pyaedt and tests dependencies
        run: |
          export LD_LIBRARY_PATH=${{ env.ANSYSEM_ROOT252 }}/common/mono/Linux64/lib64:$LD_LIBRARY_PATH
          source .venv/bin/activate
          pip install .[tests]
          pip install pytest-azurepipelines

      - name: Run tests marked with 'solvers'
        run: |
          export LD_LIBRARY_PATH=${{ env.ANSYSEM_ROOT252 }}/common/mono/Linux64/lib64:$LD_LIBRARY_PATH
          source .venv/bin/activate
          pytest ${{ env.PYTEST_ARGUMENTS }} -m solvers

      - uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7 # v5.5.1
        with:
          name: codecov-system-solvers-tests-linux
          files: ./coverage.xml
          flags: system,solver,linux

      - name: Upload pytest test results
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: pytest-solvers-linux
          path: junit/test-results.xml
        if: ${{ always() }}

  system-tests-general-windows:
    name: Testing general and coverage (Windows)
    if: github.event.inputs.test-general-windows == 'yes'
    runs-on: [ self-hosted, Windows, pyaedt ]
    steps:
      - name: Install Git and checkout project
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Setup Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}

      - name: Create virtual environment
        run: |
          python -m venv .venv
          .venv\Scripts\Activate.ps1
          python -m pip install pip -U
          python -m pip install wheel setuptools -U
          python -c "import sys; print(sys.executable)"

      - name: Install pyaedt and tests dependencies
        run: |
          .venv\Scripts\Activate.ps1
          pip install .[tests]
          pip install pytest-azurepipelines

      - name: Install CI dependencies (e.g. vtk-osmesa)
        run: |
          .venv\Scripts\Activate.ps1
          # Uninstall conflicting dependencies
          pip uninstall --yes vtk
          pip install --extra-index-url https://wheels.vtk.org vtk-osmesa==9.3.1

      - name: Run tests marked with 'general'
        uses: nick-fields/retry@ce71cc2ab81d554ebbe88c79ab5975992d79ba08 # v3.0.2
        env:
          PYTHONMALLOC: malloc
        with:
          max_attempts: 2
          retry_on: error
          timeout_minutes: 50
          command: |
            .venv\Scripts\Activate.ps1
            pytest ${{ env.PYTEST_ARGUMENTS }} -n 4 --dist loadfile -m general

      - uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7 # v5.5.1
        with:
          name: codecov-system-general-tests-windows
          files: ./coverage.xml
          flags: system,general,windows

      - name: Upload pytest test results
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: pytest-general-windows
          path: junit/test-results.xml
        if: ${{ always() }}

  system-tests-general-linux:
    name: Testing general and coverage (Linux)
    if: github.event.inputs.test-general-linux == 'yes'
    runs-on: [ self-hosted, Linux, pyaedt ]
    env:
      ANSYSEM_ROOT252: '/usr/ansys_inc/v252/AnsysEM'
      ANS_NODEPCHECK: '1'
    steps:
      - name: Install Git and checkout project
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Setup Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}

      - name: Create virtual environment
        run: |
          export LD_LIBRARY_PATH=${{ env.ANSYSEM_ROOT252 }}/common/mono/Linux64/lib64:$LD_LIBRARY_PATH
          python -m venv .venv
          source .venv/bin/activate
          python -m pip install --trusted-host pypi.org --trusted-host pypi.python.org --trusted-host files.pythonhosted.org pip -U
          python -m pip install --trusted-host pypi.org --trusted-host pypi.python.org --trusted-host files.pythonhosted.org wheel setuptools -U
          python -c "import sys; print(sys.executable)"

      - name: Install pyaedt and tests dependencies
        run: |
          export LD_LIBRARY_PATH=${{ env.ANSYSEM_ROOT252 }}/common/mono/Linux64/lib64:$LD_LIBRARY_PATH
          source .venv/bin/activate
          pip install .[tests]
          pip install pytest-azurepipelines

      - name: Install CI dependencies (e.g. vtk-osmesa)
        run: |
          source .venv/bin/activate
          # Uninstall conflicting dependencies
          pip uninstall --yes vtk
          pip install --extra-index-url https://wheels.vtk.org vtk-osmesa==9.3.1

      - name: Run tests marked with 'general'
        uses: nick-fields/retry@ce71cc2ab81d554ebbe88c79ab5975992d79ba08 # v3.0.2
        with:
          max_attempts: 2
          retry_on: error
          timeout_minutes: 50
          command: |
            export LD_LIBRARY_PATH=${{ env.ANSYSEM_ROOT252 }}/common/mono/Linux64/lib64:$LD_LIBRARY_PATH
            source .venv/bin/activate
            pytest ${{ env.PYTEST_ARGUMENTS }} -n 4 --dist loadfile -m general

      - uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7 # v5.5.1
        with:
          name: codecov-system-general-tests
          files: ./coverage.xml
          flags: system,solver,linux

      - name: Upload pytest test results
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: pytest-general-linux
          path: junit/test-results.xml
        if: ${{ always() }}
