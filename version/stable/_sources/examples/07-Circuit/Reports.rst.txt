
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples\07-Circuit\Reports.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_07-Circuit_Reports.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_07-Circuit_Reports.py:


Circuit: automatic report creation
----------------------------------
This example shows how you can use PyAEDT to create reports automatically using a JSON file.

.. GENERATED FROM PYTHON SOURCE LINES 8-11

Perform required imports
~~~~~~~~~~~~~~~~~~~~~~~~
Perform required imports and set the local path to the path for PyAEDT.

.. GENERATED FROM PYTHON SOURCE LINES 11-21

.. code-block:: default


    # sphinx_gallery_thumbnail_path = 'Resources/spectrum_plot.png'
    import os

    import pyaedt

    # Set local path to path for PyAEDT
    temp_folder = pyaedt.generate_unique_folder_name()
    project_path = pyaedt.downloads.download_custom_reports(temp_folder)








.. GENERATED FROM PYTHON SOURCE LINES 22-25

Launch AEDT
~~~~~~~~~~~
Launch AEDT 2023 R1 in graphical mode. This example uses SI units.

.. GENERATED FROM PYTHON SOURCE LINES 25-28

.. code-block:: default


    desktopVersion = "2023.1"








.. GENERATED FROM PYTHON SOURCE LINES 29-36

Set non-graphical mode
~~~~~~~~~~~~~~~~~~~~~~
Set non-graphical mode. ``"PYAEDT_NON_GRAPHICAL"`` is needed to generate
documentation only.
You can set ``non_graphical`` either to ``True`` or ``False``.
The Boolean parameter ``new_thread`` defines whether to create a new instance
of AEDT or try to connect to an existing instance of it.

.. GENERATED FROM PYTHON SOURCE LINES 36-40

.. code-block:: default


    non_graphical = False
    NewThread = True








.. GENERATED FROM PYTHON SOURCE LINES 41-45

Launch AEDT with Circuit
~~~~~~~~~~~~~~~~~~~~~~~~
Launch AEDT with Circuit. The :class:`pyaedt.Desktop` class initializes AEDT
and starts the specified version in the specified mode.

.. GENERATED FROM PYTHON SOURCE LINES 45-52

.. code-block:: default


    cir = pyaedt.Circuit(projectname=os.path.join(project_path, 'CISPR25_Radiated_Emissions_Example22R1.aedtz'),
                         non_graphical=non_graphical,
                         specified_version=desktopVersion,
                         new_desktop_session=True
                         )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    C:\actions-runner\_work\_tool\Python\3.8.10\x64\lib\subprocess.py:946: ResourceWarning: subprocess 6164 is still running
      _warn("subprocess %s is still running" % self.pid,
    c:\actions-runner\_work\pyaedt\pyaedt\testenv\lib\site-packages\pyaedt\desktop.py:79: ResourceWarning: unclosed file <_io.BufferedReader name=11>
      subprocess.Popen(" ".join(command), env=my_env, stdout=subprocess.DEVNULL, stderr=subprocess.PIPE)
    c:\actions-runner\_work\pyaedt\pyaedt\testenv\lib\site-packages\pyaedt\desktop.py:86: ResourceWarning: unclosed <socket.socket fd=14976, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('0.0.0.0', 55530)>
      while not _check_grpc_port(port):
    c:\actions-runner\_work\pyaedt\pyaedt\testenv\lib\site-packages\pyaedt\desktop.py:86: ResourceWarning: unclosed <socket.socket fd=15304, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('0.0.0.0', 55536)>
      while not _check_grpc_port(port):
    c:\actions-runner\_work\pyaedt\pyaedt\testenv\lib\site-packages\pyaedt\desktop.py:86: ResourceWarning: unclosed <socket.socket fd=15304, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('0.0.0.0', 55540)>
      while not _check_grpc_port(port):
    c:\actions-runner\_work\pyaedt\pyaedt\testenv\lib\site-packages\pyaedt\desktop.py:86: ResourceWarning: unclosed <socket.socket fd=15304, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('0.0.0.0', 55543)>
      while not _check_grpc_port(port):




.. GENERATED FROM PYTHON SOURCE LINES 53-60

Create spectrum report
~~~~~~~~~~~~~~~~~~~~~~
Create a spectrum report. You can use a JSON file to create a simple setup
or a fully customized one. The following code creates a simple setup and changes
the JSON file to customize it. In a spectrum report, you can add limitilines and
notes and edit axes, the grid, and the legend. You can create custom reports
in non-graphical mode in AEDT 2023 R1 and later.

.. GENERATED FROM PYTHON SOURCE LINES 60-66

.. code-block:: default


    report1 = cir.post.create_report_from_configuration(os.path.join(project_path,'Spectrum_CISPR_Basic.json'))

    if not non_graphical:
        report1_full = cir.post.create_report_from_configuration(os.path.join(project_path,'Spectrum_CISPR_Custom.json'))








.. GENERATED FROM PYTHON SOURCE LINES 67-73

Create transient report
~~~~~~~~~~~~~~~~~~~~~~~
Create a transient report. You can read and modify the JSON file
before running the script. The following code modifies the traces
before generating the report. You can create custom reports in non-graphical
mode in AEDT 2023 R1 and later.

.. GENERATED FROM PYTHON SOURCE LINES 73-84

.. code-block:: default


    if non_graphical:
        props = pyaedt.data_handler.json_to_dict(os.path.join(project_path, 'Transient_CISPR_Basic.json'))
    else:
        props = pyaedt.data_handler.json_to_dict(os.path.join(project_path, 'Transient_CISPR_Custom.json'))

    report2 = cir.post.create_report_from_configuration(input_dict=props, solution_name="NexximTransient")
    props["expressions"] = {"V(Battery)": {}, "V(U1_VDD)": {}}
    props["plot_name"] = "Battery Voltage"
    report3 = cir.post.create_report_from_configuration(input_dict=props, solution_name="NexximTransient")








.. GENERATED FROM PYTHON SOURCE LINES 85-90

Create eye diagram
~~~~~~~~~~~~~~~~~~
Create an eye diagram. If the JSON file contains an eye mask, you can create
an eye diagram and fully customize it. You can create custom reports in
non-graphical mode in AEDT 2023 R1 and later.

.. GENERATED FROM PYTHON SOURCE LINES 90-99

.. code-block:: default


    report4 = cir.post.create_report_from_configuration(os.path.join(project_path, 'EyeDiagram_CISPR_Basic.json'))

    if not non_graphical:
        report4_full = cir.post.create_report_from_configuration(os.path.join(project_path, 'EyeDiagram_CISPR_Custom.json'))

    if not non_graphical:
        cir.post.export_report_to_jpg(cir.working_directory, report4.plot_name)








.. GENERATED FROM PYTHON SOURCE LINES 100-102

This is how the spectrum looks like
.. image:: Resources/spectrum_plot.png

.. GENERATED FROM PYTHON SOURCE LINES 104-107

Save project and close AEDT
~~~~~~~~~~~~~~~~~~~~~~~~~~~
Save the project and close AEDT.

.. GENERATED FROM PYTHON SOURCE LINES 107-111

.. code-block:: default


    cir.save_project()
    print("Project Saved in {}".format(cir.project_path))
    cir.release_desktop()




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Project Saved in D:/Temp/PyAEDTExamples/custom_reports/

    True




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  46.473 seconds)


.. _sphx_glr_download_examples_07-Circuit_Reports.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: Reports.py <Reports.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: Reports.ipynb <Reports.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
