
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples\05-Q3D\Q3D_from_EDB.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_05-Q3D_Q3D_from_EDB.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_05-Q3D_Q3D_from_EDB.py:


Q3D Extractor: PCB analysis
---------------------------
This example shows how you can use PyAEDT to create a design in
Q3D Extractor and run a simulation starting from an EDB Project.

.. GENERATED FROM PYTHON SOURCE LINES 9-12

Perform required imports
~~~~~~~~~~~~~~~~~~~~~~~~
Perform required imports.

.. GENERATED FROM PYTHON SOURCE LINES 12-17

.. code-block:: default

    import os
    import tempfile
    import pyaedt









.. GENERATED FROM PYTHON SOURCE LINES 18-21

Setup project files and path
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Download of needed project file and setup of temporary project directory.

.. GENERATED FROM PYTHON SOURCE LINES 21-29

.. code-block:: default

    project_dir = tempfile.gettempdir()
    aedb_project = pyaedt.downloads.download_file('edb/ANSYS-HSD_V1.aedb')

    project_name = pyaedt.generate_unique_name("HSD")
    output_edb = os.path.join(project_dir, project_name + '.aedb')
    output_q3d = os.path.join(project_dir, project_name + '_q3d.aedt')









.. GENERATED FROM PYTHON SOURCE LINES 30-34

Open EDB
~~~~~~~~
Open the edb project and created a cutout on the selected nets
before exporting to Q3D.

.. GENERATED FROM PYTHON SOURCE LINES 34-39

.. code-block:: default

    edb = pyaedt.Edb(aedb_project, edbversion="2023.1")
    edb.cutout(["CLOCK_I2C_SCL", "CLOCK_I2C_SDA"], ["GND"], output_aedb_path=output_edb,
                                  use_pyaedt_extent_computing=True, )






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    c:\actions-runner\_work\pyaedt\pyaedt\testenv\lib\site-packages\pyaedt\edb_core\components.py:163: DeprecationWarning: Use new property :func:`instances` instead.
      warnings.warn("Use new property :func:`instances` instead.", DeprecationWarning)

    True



.. GENERATED FROM PYTHON SOURCE LINES 40-44

Identify pins position
~~~~~~~~~~~~~~~~~~~~~~
Identify [x,y] pin locations on the components to define where to assign sources
and sinks for Q3D and append Z elevation.

.. GENERATED FROM PYTHON SOURCE LINES 44-51

.. code-block:: default


    pin_u13_scl = [i for i in edb.components["U13"].pins.values() if i.net_name == "CLOCK_I2C_SCL"]
    pin_u1_scl = [i for i in edb.components["U1"].pins.values() if i.net_name == "CLOCK_I2C_SCL"]
    pin_u13_sda = [i for i in edb.components["U13"].pins.values() if i.net_name == "CLOCK_I2C_SDA"]
    pin_u1_sda = [i for i in edb.components["U1"].pins.values() if i.net_name == "CLOCK_I2C_SDA"]









.. GENERATED FROM PYTHON SOURCE LINES 52-55

Append Z Positions
~~~~~~~~~~~~~~~~~~
Note: The factor 100 converts from "meters" to "mm"

.. GENERATED FROM PYTHON SOURCE LINES 55-68

.. code-block:: default


    location_u13_scl = [i * 1000 for i in pin_u13_scl[0].position]
    location_u13_scl.append(edb.components["U13"].upper_elevation * 1000)

    location_u1_scl = [i * 1000 for i in pin_u1_scl[0].position]
    location_u1_scl.append(edb.components["U1"].upper_elevation * 1000)

    location_u13_sda = [i * 1000 for i in pin_u13_sda[0].position]
    location_u13_sda.append(edb.components["U13"].upper_elevation * 1000)

    location_u1_sda = [i * 1000 for i in pin_u1_sda[0].position]
    location_u1_sda.append(edb.components["U1"].upper_elevation * 1000)








.. GENERATED FROM PYTHON SOURCE LINES 69-72

Save and close Edb
~~~~~~~~~~~~~~~~~~
Save, close Edb and open it in Hfss 3D Layout to generate the 3D model.

.. GENERATED FROM PYTHON SOURCE LINES 72-78

.. code-block:: default


    edb.save_edb()
    edb.close_edb()

    h3d = pyaedt.Hfss3dLayout(output_edb, specified_version="2023.1", non_graphical=True, new_desktop_session=True)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    C:\actions-runner\_work\_tool\Python\3.8.10\x64\lib\subprocess.py:946: ResourceWarning: subprocess 5604 is still running
      _warn("subprocess %s is still running" % self.pid,
    c:\actions-runner\_work\pyaedt\pyaedt\testenv\lib\site-packages\pyaedt\desktop.py:79: ResourceWarning: unclosed file <_io.BufferedReader name=11>
      subprocess.Popen(" ".join(command), env=my_env, stdout=subprocess.DEVNULL, stderr=subprocess.PIPE)
    c:\actions-runner\_work\pyaedt\pyaedt\testenv\lib\site-packages\pyaedt\desktop.py:86: ResourceWarning: unclosed <socket.socket fd=15472, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('0.0.0.0', 54683)>
      while not _check_grpc_port(port):
    c:\actions-runner\_work\pyaedt\pyaedt\testenv\lib\site-packages\pyaedt\desktop.py:86: ResourceWarning: unclosed <socket.socket fd=8916, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('0.0.0.0', 54689)>
      while not _check_grpc_port(port):
    c:\actions-runner\_work\pyaedt\pyaedt\testenv\lib\site-packages\pyaedt\desktop.py:86: ResourceWarning: unclosed <socket.socket fd=8916, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('0.0.0.0', 54692)>
      while not _check_grpc_port(port):
    c:\actions-runner\_work\pyaedt\pyaedt\testenv\lib\site-packages\pyaedt\desktop.py:86: ResourceWarning: unclosed <socket.socket fd=15472, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('0.0.0.0', 54696)>
      while not _check_grpc_port(port):




.. GENERATED FROM PYTHON SOURCE LINES 79-83

Export to Q3D
~~~~~~~~~~~~~
Create a dummy setup and export the layout in Q3D.
keep_net_name will reassign Q3D nets names from Hfss 3D Layout.

.. GENERATED FROM PYTHON SOURCE LINES 83-89

.. code-block:: default

    setup = h3d.create_setup()
    setup.export_to_q3d(output_q3d, keep_net_name=True)
    h3d.close_project()







.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    c:\actions-runner\_work\pyaedt\pyaedt\testenv\lib\site-packages\pyaedt\edb_core\components.py:163: DeprecationWarning: Use new property :func:`instances` instead.
      warnings.warn("Use new property :func:`instances` instead.", DeprecationWarning)

    True



.. GENERATED FROM PYTHON SOURCE LINES 90-93

Open Q3D
~~~~~~~~
Launch the newly created q3d project and plot it.

.. GENERATED FROM PYTHON SOURCE LINES 93-98

.. code-block:: default


    q3d = pyaedt.Q3d(output_q3d)
    q3d.plot(show=False, objects=["CLOCK_I2C_SCL", "CLOCK_I2C_SDA"],
             export_path=os.path.join(q3d.working_directory, "Q3D.jpg"), plot_air_objects=False)




.. image-sg:: /examples/05-Q3D/images/sphx_glr_Q3D_from_EDB_001.png
   :alt: Q3D from EDB
   :srcset: /examples/05-Q3D/images/sphx_glr_Q3D_from_EDB_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <pyaedt.generic.plot.ModelPlotter object at 0x00000228ABB8B430>



.. GENERATED FROM PYTHON SOURCE LINES 99-103

Assing Source and Sink
~~~~~~~~~~~~~~~~~~~~~~
Use previously calculated position to identify faces and
assign sources and sinks on nets.

.. GENERATED FROM PYTHON SOURCE LINES 103-115

.. code-block:: default




    f1 = q3d.modeler.get_faceid_from_position(location_u13_scl, obj_name="CLOCK_I2C_SCL")
    q3d.assign_source_to_sheet(f1, "CLOCK_I2C_SCL")
    f1 = q3d.modeler.get_faceid_from_position(location_u13_sda, obj_name="CLOCK_I2C_SDA")
    q3d.assign_source_to_sheet(f1, "CLOCK_I2C_SDA")
    f1 = q3d.modeler.get_faceid_from_position(location_u1_scl, obj_name="CLOCK_I2C_SCL")
    q3d.assign_sink_to_sheet(f1, "CLOCK_I2C_SCL")
    f1 = q3d.modeler.get_faceid_from_position(location_u1_sda, obj_name="CLOCK_I2C_SDA")
    q3d.assign_sink_to_sheet(f1, "CLOCK_I2C_SDA")





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <pyaedt.modules.Boundary.BoundaryObject object at 0x00000228AA5123A0>



.. GENERATED FROM PYTHON SOURCE LINES 116-120

Create Setup
~~~~~~~~~~~~
Create a setup and a frequency sweep from DC to 2GHz.
Analyze project.

.. GENERATED FROM PYTHON SOURCE LINES 120-128

.. code-block:: default


    setup = q3d.create_setup()
    setup.dc_enabled = True
    setup.capacitance_enabled = False
    sweep = setup.add_sweep()
    sweep.add_subrange("LinearStep", 0, end=2, count=0.05, unit="GHz", save_single_fields=False, clear=True)
    setup.analyze()








.. GENERATED FROM PYTHON SOURCE LINES 129-132

ACL Report
~~~~~~~~~~
Compute ACL solutions and plot them.

.. GENERATED FROM PYTHON SOURCE LINES 132-137

.. code-block:: default


    traces_acl = q3d.post.available_report_quantities(quantities_category="ACL Matrix")
    solution = q3d.post.get_solution_data(traces_acl)
    solution.plot()




.. image-sg:: /examples/05-Q3D/images/sphx_glr_Q3D_from_EDB_002.png
   :alt: Simulation Results Plot
   :srcset: /examples/05-Q3D/images/sphx_glr_Q3D_from_EDB_002.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <Figure size 2000x1000 with 1 Axes>



.. GENERATED FROM PYTHON SOURCE LINES 138-141

ACR Report
~~~~~~~~~~
Compute ACR solutions and plot them.

.. GENERATED FROM PYTHON SOURCE LINES 141-146

.. code-block:: default


    traces_acr = q3d.post.available_report_quantities(quantities_category="ACR Matrix")
    solution2 = q3d.post.get_solution_data(traces_acr)
    solution2.plot()




.. image-sg:: /examples/05-Q3D/images/sphx_glr_Q3D_from_EDB_003.png
   :alt: Simulation Results Plot
   :srcset: /examples/05-Q3D/images/sphx_glr_Q3D_from_EDB_003.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <Figure size 2000x1000 with 1 Axes>



.. GENERATED FROM PYTHON SOURCE LINES 147-151

Close AEDT
~~~~~~~~~~
After the simulation completes, you can close AEDT or release it using the
``release_desktop`` method. All methods provide for saving projects before closing.

.. GENERATED FROM PYTHON SOURCE LINES 151-152

.. code-block:: default

    q3d.release_desktop()




.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    True




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 10 minutes  53.976 seconds)


.. _sphx_glr_download_examples_05-Q3D_Q3D_from_EDB.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: Q3D_from_EDB.py <Q3D_from_EDB.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: Q3D_from_EDB.ipynb <Q3D_from_EDB.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
