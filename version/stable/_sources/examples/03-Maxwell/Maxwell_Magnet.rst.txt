
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples\03-Maxwell\Maxwell_Magnet.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_03-Maxwell_Maxwell_Magnet.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_03-Maxwell_Maxwell_Magnet.py:


Maxwell 3D: magnet DC analysis
------------------------------
This example shows how you can use PyAEDT to create a Maxwell DC analysis,
compute mass center, and move coordinate systems.

.. GENERATED FROM PYTHON SOURCE LINES 8-11

Perform required imports
~~~~~~~~~~~~~~~~~~~~~~~~
Perform required imports.

.. GENERATED FROM PYTHON SOURCE LINES 11-16

.. code-block:: default


    from pyaedt import Maxwell3d
    from pyaedt import generate_unique_project_name
    import os








.. GENERATED FROM PYTHON SOURCE LINES 17-22

Set non-graphical mode
~~~~~~~~~~~~~~~~~~~~~~
Set non-graphical mode. ``"PYAEDT_NON_GRAPHICAL"`` is needed to generate
documentation only.
You can set ``non_graphical`` either to ``True`` or ``False``.

.. GENERATED FROM PYTHON SOURCE LINES 22-25

.. code-block:: default


    non_graphical = False








.. GENERATED FROM PYTHON SOURCE LINES 26-29

Launch AEDT
~~~~~~~~~~~
Launch AEDT 2023 R1 in graphical mode.

.. GENERATED FROM PYTHON SOURCE LINES 29-35

.. code-block:: default


    m3d = Maxwell3d(projectname=generate_unique_project_name(),
                    specified_version="2023.1",
                    new_desktop_session=True,
                    non_graphical=non_graphical)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    C:\actions-runner\_work\_tool\Python\3.8.10\x64\lib\subprocess.py:946: ResourceWarning: subprocess 4088 is still running
      _warn("subprocess %s is still running" % self.pid,
    c:\actions-runner\_work\pyaedt\pyaedt\testenv\lib\site-packages\pyaedt\desktop.py:79: ResourceWarning: unclosed file <_io.BufferedReader name=11>
      subprocess.Popen(" ".join(command), env=my_env, stdout=subprocess.DEVNULL, stderr=subprocess.PIPE)
    c:\actions-runner\_work\pyaedt\pyaedt\testenv\lib\site-packages\pyaedt\desktop.py:86: ResourceWarning: unclosed <socket.socket fd=5256, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('0.0.0.0', 54127)>
      while not _check_grpc_port(port):
    c:\actions-runner\_work\pyaedt\pyaedt\testenv\lib\site-packages\pyaedt\desktop.py:86: ResourceWarning: unclosed <socket.socket fd=3888, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('0.0.0.0', 54134)>
      while not _check_grpc_port(port):
    c:\actions-runner\_work\pyaedt\pyaedt\testenv\lib\site-packages\pyaedt\desktop.py:86: ResourceWarning: unclosed <socket.socket fd=3888, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('0.0.0.0', 54139)>
      while not _check_grpc_port(port):
    c:\actions-runner\_work\pyaedt\pyaedt\testenv\lib\site-packages\pyaedt\desktop.py:86: ResourceWarning: unclosed <socket.socket fd=7816, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('0.0.0.0', 54142)>
      while not _check_grpc_port(port):




.. GENERATED FROM PYTHON SOURCE LINES 36-39

Set up Maxwell solution
~~~~~~~~~~~~~~~~~~~~~~~
Set up the Maxwell solution to DC.

.. GENERATED FROM PYTHON SOURCE LINES 39-42

.. code-block:: default


    m3d.solution_type = m3d.SOLUTIONS.Maxwell3d.ElectroDCConduction








.. GENERATED FROM PYTHON SOURCE LINES 43-46

Create magnet
~~~~~~~~~~~~~
Create a magnet.

.. GENERATED FROM PYTHON SOURCE LINES 46-49

.. code-block:: default


    magnet = m3d.modeler.create_box(position=[7, 4, 22], dimensions_list=[10, 5, 30], name="Magnet", matname="copper")








.. GENERATED FROM PYTHON SOURCE LINES 50-53

Create setup and assign voltage
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Create the setup and assign a voltage.

.. GENERATED FROM PYTHON SOURCE LINES 53-57

.. code-block:: default


    m3d.assign_voltage(magnet.faces, 0)
    m3d.create_setup()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    SetupName MySetupAuto with 0 Sweeps



.. GENERATED FROM PYTHON SOURCE LINES 58-61

Plot model
~~~~~~~~~~
Plot the model.

.. GENERATED FROM PYTHON SOURCE LINES 61-64

.. code-block:: default


    m3d.plot(show=False, export_path=os.path.join(m3d.working_directory, "Image.jpg"), plot_air_objects=True)




.. image-sg:: /examples/03-Maxwell/images/sphx_glr_Maxwell_Magnet_001.png
   :alt: Maxwell Magnet
   :srcset: /examples/03-Maxwell/images/sphx_glr_Maxwell_Magnet_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <pyaedt.generic.plot.ModelPlotter object at 0x00000228AC0832B0>



.. GENERATED FROM PYTHON SOURCE LINES 65-68

Solve setup
~~~~~~~~~~~
Solve the setup.

.. GENERATED FROM PYTHON SOURCE LINES 68-71

.. code-block:: default


    m3d.analyze()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    True



.. GENERATED FROM PYTHON SOURCE LINES 72-75

Compute mass center
~~~~~~~~~~~~~~~~~~~
Compute mass center using the fields calculator.

.. GENERATED FROM PYTHON SOURCE LINES 75-90

.. code-block:: default


    m3d.post.ofieldsreporter.EnterScalarFunc("X")
    m3d.post.ofieldsreporter.EnterVol(magnet.name)
    m3d.post.ofieldsreporter.CalcOp("Mean")
    m3d.post.ofieldsreporter.AddNamedExpression("CM_X", "Fields")
    m3d.post.ofieldsreporter.EnterScalarFunc("Y")
    m3d.post.ofieldsreporter.EnterVol(magnet.name)
    m3d.post.ofieldsreporter.CalcOp("Mean")
    m3d.post.ofieldsreporter.AddNamedExpression("CM_Y", "Fields")
    m3d.post.ofieldsreporter.EnterScalarFunc("Z")
    m3d.post.ofieldsreporter.EnterVol(magnet.name)
    m3d.post.ofieldsreporter.CalcOp("Mean")
    m3d.post.ofieldsreporter.AddNamedExpression("CM_Z", "Fields")
    m3d.post.ofieldsreporter.CalcStack("clear")








.. GENERATED FROM PYTHON SOURCE LINES 91-94

Get mass center
~~~~~~~~~~~~~~~
Get mass center using the fields calculator.

.. GENERATED FROM PYTHON SOURCE LINES 94-99

.. code-block:: default


    xval = m3d.post.get_scalar_field_value("CM_X", None)
    yval = m3d.post.get_scalar_field_value("CM_Y", None)
    zval = m3d.post.get_scalar_field_value("CM_Z", None)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

      File "C:\actions-runner\_work\_tool\Python\3.8.10\x64\lib\runpy.py", line 194, in _run_module_as_main
        return _run_code(code, main_globals, None,
      File "C:\actions-runner\_work\_tool\Python\3.8.10\x64\lib\runpy.py", line 87, in _run_code
        exec(code, run_globals)
      File "C:\actions-runner\_work\PyAEDT\PyAEDT\testenv\Scripts\sphinx-build.exe\__main__.py", line 7, in <module>
        sys.exit(main())
      File "c:\actions-runner\_work\pyaedt\pyaedt\testenv\lib\site-packages\sphinx\cmd\build.py", line 315, in main
        return build_main(argv)
      File "c:\actions-runner\_work\pyaedt\pyaedt\testenv\lib\site-packages\sphinx\cmd\build.py", line 276, in build_main
        app = Sphinx(args.sourcedir, args.confdir, args.outputdir,
      File "c:\actions-runner\_work\pyaedt\pyaedt\testenv\lib\site-packages\sphinx\application.py", line 262, in __init__
        self._init_builder()
      File "c:\actions-runner\_work\pyaedt\pyaedt\testenv\lib\site-packages\sphinx\application.py", line 335, in _init_builder
        self.events.emit('builder-inited')
      File "c:\actions-runner\_work\pyaedt\pyaedt\testenv\lib\site-packages\sphinx\events.py", line 94, in emit
        results.append(listener.handler(self.app, *args))
      File "c:\actions-runner\_work\pyaedt\pyaedt\testenv\lib\site-packages\sphinx_gallery\gen_gallery.py", line 538, in generate_gallery_rst
        ) = generate_dir_rst(
      File "c:\actions-runner\_work\pyaedt\pyaedt\testenv\lib\site-packages\sphinx_gallery\gen_rst.py", line 431, in generate_dir_rst
        intro, title, cost = generate_file_rst(
      File "c:\actions-runner\_work\pyaedt\pyaedt\testenv\lib\site-packages\sphinx_gallery\gen_rst.py", line 1027, in generate_file_rst
        output_blocks, time_elapsed = execute_script(script_blocks,
      File "c:\actions-runner\_work\pyaedt\pyaedt\testenv\lib\site-packages\sphinx_gallery\gen_rst.py", line 945, in execute_script
        output_blocks.append(execute_code_block(
      File "c:\actions-runner\_work\pyaedt\pyaedt\testenv\lib\site-packages\sphinx_gallery\gen_rst.py", line 810, in execute_code_block
        is_last_expr, mem_max = _exec_and_get_memory(
      File "c:\actions-runner\_work\pyaedt\pyaedt\testenv\lib\site-packages\sphinx_gallery\gen_rst.py", line 676, in _exec_and_get_memory
        mem_max, _ = gallery_conf['call_memory'](
      File "c:\actions-runner\_work\pyaedt\pyaedt\testenv\lib\site-packages\sphinx_gallery\gen_gallery.py", line 223, in call_memory
        return 0., func()
      File "c:\actions-runner\_work\pyaedt\pyaedt\testenv\lib\site-packages\sphinx_gallery\gen_rst.py", line 600, in __call__
        exec(self.code, self.fake_main.__dict__)
      File "C:\actions-runner\_work\PyAEDT\PyAEDT\examples\03-Maxwell\Maxwell_Magnet.py", line 95, in <module>
        xval = m3d.post.get_scalar_field_value("CM_X", None)
      File "c:\actions-runner\_work\pyaedt\pyaedt\testenv\lib\site-packages\pyaedt\generic\general_methods.py", line 139, in wrapper
        out = user_function(*args, **kwargs)
      File "c:\actions-runner\_work\pyaedt\pyaedt\testenv\lib\site-packages\pyaedt\modules\PostProcessor.py", line 2170, in get_scalar_field_value
        self.ofieldsreporter.EnterQty(quantity_name)
    RuntimeError: Error 0x80020009;  Logs or message window might have more details
      File "C:\actions-runner\_work\_tool\Python\3.8.10\x64\lib\runpy.py", line 194, in _run_module_as_main
        return _run_code(code, main_globals, None,
      File "C:\actions-runner\_work\_tool\Python\3.8.10\x64\lib\runpy.py", line 87, in _run_code
        exec(code, run_globals)
      File "C:\actions-runner\_work\PyAEDT\PyAEDT\testenv\Scripts\sphinx-build.exe\__main__.py", line 7, in <module>
        sys.exit(main())
      File "c:\actions-runner\_work\pyaedt\pyaedt\testenv\lib\site-packages\sphinx\cmd\build.py", line 315, in main
        return build_main(argv)
      File "c:\actions-runner\_work\pyaedt\pyaedt\testenv\lib\site-packages\sphinx\cmd\build.py", line 276, in build_main
        app = Sphinx(args.sourcedir, args.confdir, args.outputdir,
      File "c:\actions-runner\_work\pyaedt\pyaedt\testenv\lib\site-packages\sphinx\application.py", line 262, in __init__
        self._init_builder()
      File "c:\actions-runner\_work\pyaedt\pyaedt\testenv\lib\site-packages\sphinx\application.py", line 335, in _init_builder
        self.events.emit('builder-inited')
      File "c:\actions-runner\_work\pyaedt\pyaedt\testenv\lib\site-packages\sphinx\events.py", line 94, in emit
        results.append(listener.handler(self.app, *args))
      File "c:\actions-runner\_work\pyaedt\pyaedt\testenv\lib\site-packages\sphinx_gallery\gen_gallery.py", line 538, in generate_gallery_rst
        ) = generate_dir_rst(
      File "c:\actions-runner\_work\pyaedt\pyaedt\testenv\lib\site-packages\sphinx_gallery\gen_rst.py", line 431, in generate_dir_rst
        intro, title, cost = generate_file_rst(
      File "c:\actions-runner\_work\pyaedt\pyaedt\testenv\lib\site-packages\sphinx_gallery\gen_rst.py", line 1027, in generate_file_rst
        output_blocks, time_elapsed = execute_script(script_blocks,
      File "c:\actions-runner\_work\pyaedt\pyaedt\testenv\lib\site-packages\sphinx_gallery\gen_rst.py", line 945, in execute_script
        output_blocks.append(execute_code_block(
      File "c:\actions-runner\_work\pyaedt\pyaedt\testenv\lib\site-packages\sphinx_gallery\gen_rst.py", line 810, in execute_code_block
        is_last_expr, mem_max = _exec_and_get_memory(
      File "c:\actions-runner\_work\pyaedt\pyaedt\testenv\lib\site-packages\sphinx_gallery\gen_rst.py", line 676, in _exec_and_get_memory
        mem_max, _ = gallery_conf['call_memory'](
      File "c:\actions-runner\_work\pyaedt\pyaedt\testenv\lib\site-packages\sphinx_gallery\gen_gallery.py", line 223, in call_memory
        return 0., func()
      File "c:\actions-runner\_work\pyaedt\pyaedt\testenv\lib\site-packages\sphinx_gallery\gen_rst.py", line 600, in __call__
        exec(self.code, self.fake_main.__dict__)
      File "C:\actions-runner\_work\PyAEDT\PyAEDT\examples\03-Maxwell\Maxwell_Magnet.py", line 96, in <module>
        yval = m3d.post.get_scalar_field_value("CM_Y", None)
      File "c:\actions-runner\_work\pyaedt\pyaedt\testenv\lib\site-packages\pyaedt\generic\general_methods.py", line 139, in wrapper
        out = user_function(*args, **kwargs)
      File "c:\actions-runner\_work\pyaedt\pyaedt\testenv\lib\site-packages\pyaedt\modules\PostProcessor.py", line 2170, in get_scalar_field_value
        self.ofieldsreporter.EnterQty(quantity_name)
    RuntimeError: Error 0x80020009;  Logs or message window might have more details
      File "C:\actions-runner\_work\_tool\Python\3.8.10\x64\lib\runpy.py", line 194, in _run_module_as_main
        return _run_code(code, main_globals, None,
      File "C:\actions-runner\_work\_tool\Python\3.8.10\x64\lib\runpy.py", line 87, in _run_code
        exec(code, run_globals)
      File "C:\actions-runner\_work\PyAEDT\PyAEDT\testenv\Scripts\sphinx-build.exe\__main__.py", line 7, in <module>
        sys.exit(main())
      File "c:\actions-runner\_work\pyaedt\pyaedt\testenv\lib\site-packages\sphinx\cmd\build.py", line 315, in main
        return build_main(argv)
      File "c:\actions-runner\_work\pyaedt\pyaedt\testenv\lib\site-packages\sphinx\cmd\build.py", line 276, in build_main
        app = Sphinx(args.sourcedir, args.confdir, args.outputdir,
      File "c:\actions-runner\_work\pyaedt\pyaedt\testenv\lib\site-packages\sphinx\application.py", line 262, in __init__
        self._init_builder()
      File "c:\actions-runner\_work\pyaedt\pyaedt\testenv\lib\site-packages\sphinx\application.py", line 335, in _init_builder
        self.events.emit('builder-inited')
      File "c:\actions-runner\_work\pyaedt\pyaedt\testenv\lib\site-packages\sphinx\events.py", line 94, in emit
        results.append(listener.handler(self.app, *args))
      File "c:\actions-runner\_work\pyaedt\pyaedt\testenv\lib\site-packages\sphinx_gallery\gen_gallery.py", line 538, in generate_gallery_rst
        ) = generate_dir_rst(
      File "c:\actions-runner\_work\pyaedt\pyaedt\testenv\lib\site-packages\sphinx_gallery\gen_rst.py", line 431, in generate_dir_rst
        intro, title, cost = generate_file_rst(
      File "c:\actions-runner\_work\pyaedt\pyaedt\testenv\lib\site-packages\sphinx_gallery\gen_rst.py", line 1027, in generate_file_rst
        output_blocks, time_elapsed = execute_script(script_blocks,
      File "c:\actions-runner\_work\pyaedt\pyaedt\testenv\lib\site-packages\sphinx_gallery\gen_rst.py", line 945, in execute_script
        output_blocks.append(execute_code_block(
      File "c:\actions-runner\_work\pyaedt\pyaedt\testenv\lib\site-packages\sphinx_gallery\gen_rst.py", line 810, in execute_code_block
        is_last_expr, mem_max = _exec_and_get_memory(
      File "c:\actions-runner\_work\pyaedt\pyaedt\testenv\lib\site-packages\sphinx_gallery\gen_rst.py", line 676, in _exec_and_get_memory
        mem_max, _ = gallery_conf['call_memory'](
      File "c:\actions-runner\_work\pyaedt\pyaedt\testenv\lib\site-packages\sphinx_gallery\gen_gallery.py", line 223, in call_memory
        return 0., func()
      File "c:\actions-runner\_work\pyaedt\pyaedt\testenv\lib\site-packages\sphinx_gallery\gen_rst.py", line 600, in __call__
        exec(self.code, self.fake_main.__dict__)
      File "C:\actions-runner\_work\PyAEDT\PyAEDT\examples\03-Maxwell\Maxwell_Magnet.py", line 97, in <module>
        zval = m3d.post.get_scalar_field_value("CM_Z", None)
      File "c:\actions-runner\_work\pyaedt\pyaedt\testenv\lib\site-packages\pyaedt\generic\general_methods.py", line 139, in wrapper
        out = user_function(*args, **kwargs)
      File "c:\actions-runner\_work\pyaedt\pyaedt\testenv\lib\site-packages\pyaedt\modules\PostProcessor.py", line 2170, in get_scalar_field_value
        self.ofieldsreporter.EnterQty(quantity_name)
    RuntimeError: Error 0x80020009;  Logs or message window might have more details




.. GENERATED FROM PYTHON SOURCE LINES 100-103

Create variables
~~~~~~~~~~~~~~~~
Create variables with mass center values.

.. GENERATED FROM PYTHON SOURCE LINES 103-108

.. code-block:: default


    m3d[magnet.name + "x"] = str(xval * 1e3) + "mm"
    m3d[magnet.name + "y"] = str(yval * 1e3) + "mm"
    m3d[magnet.name + "z"] = str(zval * 1e3) + "mm"








.. GENERATED FROM PYTHON SOURCE LINES 109-112

Create coordinate system
~~~~~~~~~~~~~~~~~~~~~~~~
Create a parametric coordinate system.

.. GENERATED FROM PYTHON SOURCE LINES 112-117

.. code-block:: default


    cs1 = m3d.modeler.create_coordinate_system(
        [magnet.name + "x", magnet.name + "y", magnet.name + "z"], reference_cs="Global", name=magnet.name + "CS"
    )








.. GENERATED FROM PYTHON SOURCE LINES 118-121

Save and close
~~~~~~~~~~~~~~
Save the project and close AEDT.

.. GENERATED FROM PYTHON SOURCE LINES 121-124

.. code-block:: default


    m3d.save_project()
    m3d.release_desktop(close_projects=True, close_desktop=True)




.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    True




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  7.409 seconds)


.. _sphx_glr_download_examples_03-Maxwell_Maxwell_Magnet.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: Maxwell_Magnet.py <Maxwell_Magnet.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: Maxwell_Magnet.ipynb <Maxwell_Magnet.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
