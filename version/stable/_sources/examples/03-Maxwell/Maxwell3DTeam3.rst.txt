
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples\03-Maxwell\Maxwell3DTeam3.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_03-Maxwell_Maxwell3DTeam3.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_03-Maxwell_Maxwell3DTeam3.py:


Maxwell 3D: bath plate analysis
-------------------------------
This example uses PyAEDT to set up the TEAM 3 bath plate problem and
solve it using the Maxwell 3D Eddy Current solver.

.. GENERATED FROM PYTHON SOURCE LINES 8-11

Perform required imports
~~~~~~~~~~~~~~~~~~~~~~~~
Perform required imports.

.. GENERATED FROM PYTHON SOURCE LINES 11-15

.. code-block:: default


    import os
    import pyaedt








.. GENERATED FROM PYTHON SOURCE LINES 16-21

Set non-graphical mode
~~~~~~~~~~~~~~~~~~~~~~
Set non-graphical mode. ``"PYAEDT_NON_GRAPHICAL"`` is needed to generate
documentation only.
You can set ``non_graphical`` either to ``True`` or ``False``.

.. GENERATED FROM PYTHON SOURCE LINES 21-24

.. code-block:: default


    non_graphical = False








.. GENERATED FROM PYTHON SOURCE LINES 25-30

Launch AEDT and Maxwell 3D
~~~~~~~~~~~~~~~~~~~~~~~~~~
Launch AEDT and Maxwell 3D after first setting up the project and design names,
the solver, and the version. The following code also creates an instance of the
``Maxwell3d`` class named ``M3D``. 

.. GENERATED FROM PYTHON SOURCE LINES 30-47

.. code-block:: default


    Project_Name = "COMPUMAG"
    Design_Name = "TEAM 3 Bath Plate"
    Solver = "EddyCurrent"
    DesktopVersion = "2023.1"

    M3D = pyaedt.Maxwell3d(
        projectname=pyaedt.generate_unique_project_name(),
        designname=Design_Name,
        solution_type=Solver,
        specified_version=DesktopVersion,
        non_graphical=non_graphical,
        new_desktop_session=True,
    )
    uom = M3D.modeler.model_units = "mm"
    modeler = M3D.modeler





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    C:\actions-runner\_work\_tool\Python\3.8.10\x64\lib\subprocess.py:946: ResourceWarning: subprocess 7416 is still running
      _warn("subprocess %s is still running" % self.pid,
    c:\actions-runner\_work\pyaedt\pyaedt\testenv\lib\site-packages\pyaedt\desktop.py:79: ResourceWarning: unclosed file <_io.BufferedReader name=11>
      subprocess.Popen(" ".join(command), env=my_env, stdout=subprocess.DEVNULL, stderr=subprocess.PIPE)
    c:\actions-runner\_work\pyaedt\pyaedt\testenv\lib\site-packages\pyaedt\desktop.py:86: ResourceWarning: unclosed <socket.socket fd=4560, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('0.0.0.0', 53818)>
      while not _check_grpc_port(port):
    c:\actions-runner\_work\pyaedt\pyaedt\testenv\lib\site-packages\pyaedt\desktop.py:86: ResourceWarning: unclosed <socket.socket fd=4560, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('0.0.0.0', 53823)>
      while not _check_grpc_port(port):
    c:\actions-runner\_work\pyaedt\pyaedt\testenv\lib\site-packages\pyaedt\desktop.py:86: ResourceWarning: unclosed <socket.socket fd=4792, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('0.0.0.0', 53827)>
      while not _check_grpc_port(port):
    c:\actions-runner\_work\pyaedt\pyaedt\testenv\lib\site-packages\pyaedt\desktop.py:86: ResourceWarning: unclosed <socket.socket fd=4560, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=0, laddr=('0.0.0.0', 53831)>
      while not _check_grpc_port(port):




.. GENERATED FROM PYTHON SOURCE LINES 48-52

Add variable
~~~~~~~~~~~~
Add a design variable named ``Coil_Position`` that you use later to adjust the
position of the coil.

.. GENERATED FROM PYTHON SOURCE LINES 52-56

.. code-block:: default


    Coil_Position = -20
    M3D["Coil_Position"] = str(Coil_Position) + uom  # Creates a design variable in Maxwell








.. GENERATED FROM PYTHON SOURCE LINES 57-60

Add material
~~~~~~~~~~~~
Add a material named ``team3_aluminium`` for the ladder plate.

.. GENERATED FROM PYTHON SOURCE LINES 60-64

.. code-block:: default


    mat = M3D.materials.add_material("team3_aluminium")
    mat.conductivity = 32780000








.. GENERATED FROM PYTHON SOURCE LINES 65-68

Draw background region
~~~~~~~~~~~~~~~~~~~~~~
Draw a background region that uses the default properties for an air region.

.. GENERATED FROM PYTHON SOURCE LINES 68-71

.. code-block:: default


    M3D.modeler.create_air_region(x_pos=100, y_pos=100, z_pos=100, x_neg=100, y_neg=100, z_neg=100)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <pyaedt.modeler.cad.object3d.Object3d object at 0x00000228A8EE8F70>



.. GENERATED FROM PYTHON SOURCE LINES 72-75

Draw ladder plate and assign material
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Draw a ladder plate and assign it the newly created material ``team3_aluminium``.

.. GENERATED FROM PYTHON SOURCE LINES 75-82

.. code-block:: default


    M3D.modeler.create_box(position=[-30, -55, 0], dimensions_list=[60, 110, -6.35], name="LadderPlate",
                           matname="team3_aluminium")
    M3D.modeler.create_box(position=[-20, -35, 0], dimensions_list=[40, 30, -6.35], name="CutoutTool1")
    M3D.modeler.create_box(position=[-20, 5, 0], dimensions_list=[40, 30, -6.35], name="CutoutTool2")
    M3D.modeler.subtract("LadderPlate", ["CutoutTool1", "CutoutTool2"], keep_originals=False)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    True



.. GENERATED FROM PYTHON SOURCE LINES 83-86

Add mesh refinement to ladder plate
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Add a mesh refinement to the ladder plate.

.. GENERATED FROM PYTHON SOURCE LINES 86-89

.. code-block:: default


    M3D.mesh.assign_length_mesh("LadderPlate", maxlength=3, maxel=None, meshop_name="Ladder_Mesh")





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <pyaedt.modules.Mesh.MeshOperation object at 0x00000228AA4700A0>



.. GENERATED FROM PYTHON SOURCE LINES 90-94

Draw search coil and assign excitation
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Draw a search coil and assign it a ``stranded`` current excitation. 
The stranded type forces the current density to be constant in the coil.

.. GENERATED FROM PYTHON SOURCE LINES 94-107

.. code-block:: default


    M3D.modeler.create_cylinder(
        cs_axis="Z", position=[0, "Coil_Position", 15], radius=40, height=20, name="SearchCoil", matname="copper"
    )
    M3D.modeler.create_cylinder(
        cs_axis="Z", position=[0, "Coil_Position", 15], radius=20, height=20, name="Bore", matname="copper"
    )
    M3D.modeler.subtract("SearchCoil", "Bore", keep_originals=False)
    M3D.modeler.section("SearchCoil", "YZ")
    M3D.modeler.separate_bodies("SearchCoil_Section1")
    M3D.modeler.delete("SearchCoil_Section1_Separate1")
    M3D.assign_current(object_list=["SearchCoil_Section1"], amplitude=1260, solid=False, name="SearchCoil_Excitation")





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <pyaedt.modules.Boundary.BoundaryObject object at 0x00000228AC083910>



.. GENERATED FROM PYTHON SOURCE LINES 108-113

Draw a line for plotting Bz
~~~~~~~~~~~~~~~~~~~~~~~~~~~
Draw a line for plotting Bz later. Bz is the Z component of the flux
density. The following code also adds a small diameter cylinder to refine the
mesh locally around the line.

.. GENERATED FROM PYTHON SOURCE LINES 113-119

.. code-block:: default


    Line_Points = [["0mm", "-55mm", "0.5mm"], ["0mm", "55mm", "0.5mm"]]
    P1 = modeler.create_polyline(position_list=Line_Points, name="Line_AB")
    P2 = modeler.create_polyline(position_list=Line_Points, name="Line_AB_MeshRefinement")
    P2.set_crosssection_properties(type="Circle", width="0.5mm")





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <pyaedt.modeler.cad.polylines.Polyline object at 0x00000228AC0830A0>



.. GENERATED FROM PYTHON SOURCE LINES 120-123

Plot model
~~~~~~~~~~
Plot the model.

.. GENERATED FROM PYTHON SOURCE LINES 123-126

.. code-block:: default


    M3D.plot(show=False, export_path=os.path.join(M3D.working_directory, "Image.jpg"), plot_air_objects=False)




.. image-sg:: /examples/03-Maxwell/images/sphx_glr_Maxwell3DTeam3_001.png
   :alt: Maxwell3DTeam3
   :srcset: /examples/03-Maxwell/images/sphx_glr_Maxwell3DTeam3_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <pyaedt.generic.plot.ModelPlotter object at 0x00000228A8EE84F0>



.. GENERATED FROM PYTHON SOURCE LINES 127-130

Add Maxwell 3D setup
~~~~~~~~~~~~~~~~~~~~
Add a Maxwell 3D setup with frequency points at 50 Hz and 200 Hz.

.. GENERATED FROM PYTHON SOURCE LINES 130-136

.. code-block:: default


    Setup = M3D.create_setup(setupname="Setup1")
    Setup.props["Frequency"] = "200Hz"
    Setup.props["HasSweepSetup"] = True
    Setup.add_eddy_current_sweep(range_type="LinearStep", start=50, end=200, count=150, clear=True)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    True



.. GENERATED FROM PYTHON SOURCE LINES 137-141

Adjust eddy effects
~~~~~~~~~~~~~~~~~~~
Adjust eddy effects for the ladder plate and the search coil. The setting for
eddy effect is ignored for the stranded conductor type used in the search coil.

.. GENERATED FROM PYTHON SOURCE LINES 141-145

.. code-block:: default


    M3D.eddy_effects_on(["LadderPlate"], activate_eddy_effects=True, activate_displacement_current=True)
    M3D.eddy_effects_on(["SearchCoil"], activate_eddy_effects=False, activate_displacement_current=True)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    True



.. GENERATED FROM PYTHON SOURCE LINES 146-149

Add linear parametric sweep
~~~~~~~~~~~~~~~~~~~~~~~~~~~
Add a linear parametric sweep for the two coil positions.

.. GENERATED FROM PYTHON SOURCE LINES 149-162

.. code-block:: default


    sweepname = "CoilSweep"
    param = M3D.parametrics.add("Coil_Position", -20, 0, 20, "LinearStep", parametricname=sweepname)
    param["SaveFields"] = True
    param["CopyMesh"] = False
    param["SolveWithCopiedMeshOnly"] = True

    # Solve parametric sweep
    # ~~~~~~~~~~~~~~~~~~~~~~
    # Solve the parametric sweep directly so that results of all variations are available.

    M3D.analyze_setup(sweepname)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    True



.. GENERATED FROM PYTHON SOURCE LINES 163-166

Create expression for Bz
~~~~~~~~~~~~~~~~~~~~~~~~
Create an expression for Bz using the fields calculator.

.. GENERATED FROM PYTHON SOURCE LINES 166-175

.. code-block:: default


    Fields = M3D.odesign.GetModule("FieldsReporter")
    Fields.EnterQty("B")
    Fields.CalcOp("ScalarZ")
    Fields.EnterScalar(1000)
    Fields.CalcOp("*")
    Fields.CalcOp("Smooth")
    Fields.AddNamedExpression("Bz", "Fields")








.. GENERATED FROM PYTHON SOURCE LINES 176-179

Plot mag(Bz) as a function of frequency
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Plot mag(Bz) as a function of frequency for both coil positions.

.. GENERATED FROM PYTHON SOURCE LINES 179-200

.. code-block:: default


    variations = {"Distance": ["All"], "Freq": ["All"], "Phase": ["0deg"], "Coil_Position": ["-20mm"]}
    M3D.post.create_report(
        expressions="mag(Bz)",
        report_category="Fields",
        context="Line_AB",
        variations=variations,
        primary_sweep_variable="Distance",
        plotname="mag(Bz) Along 'Line_AB' Offset Coil",
    )

    variations = {"Distance": ["All"], "Freq": ["All"], "Phase": ["0deg"], "Coil_Position": ["0mm"]}
    M3D.post.create_report(
        expressions="mag(Bz)",
        report_category="Fields",
        context="Line_AB",
        variations=variations,
        primary_sweep_variable="Distance",
        plotname="mag(Bz) Along 'Line_AB' Coil",
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <pyaedt.modules.report_templates.Fields object at 0x00000228AC083520>



.. GENERATED FROM PYTHON SOURCE LINES 201-204

Generate plot outside of AEDT
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Generate the same plot outside AEDT.

.. GENERATED FROM PYTHON SOURCE LINES 204-215

.. code-block:: default


    variations = {"Distance": ["All"], "Freq": ["All"], "Phase": ["0deg"], "Coil_Position": ["All"]}

    solutions = M3D.post.get_solution_data(
        expressions="mag(Bz)",
        report_category="Fields",
        context="Line_AB",
        variations=variations,
        primary_sweep_variable="Distance",
    )








.. GENERATED FROM PYTHON SOURCE LINES 216-219

Set up sweep value and plot solution
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Set up a sweep value and plot the solution.

.. GENERATED FROM PYTHON SOURCE LINES 219-223

.. code-block:: default


    solutions.active_variation["Coil_Position"] = -0.02
    solutions.plot()




.. image-sg:: /examples/03-Maxwell/images/sphx_glr_Maxwell3DTeam3_002.png
   :alt: Simulation Results Plot
   :srcset: /examples/03-Maxwell/images/sphx_glr_Maxwell3DTeam3_002.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <Figure size 2000x1000 with 1 Axes>



.. GENERATED FROM PYTHON SOURCE LINES 224-227

Change sweep value and plot solution
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Change the sweep value and plot the solution again.

.. GENERATED FROM PYTHON SOURCE LINES 227-231

.. code-block:: default


    solutions.active_variation["Coil_Position"] = 0
    solutions.plot()




.. image-sg:: /examples/03-Maxwell/images/sphx_glr_Maxwell3DTeam3_003.png
   :alt: Simulation Results Plot
   :srcset: /examples/03-Maxwell/images/sphx_glr_Maxwell3DTeam3_003.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <Figure size 2000x1000 with 1 Axes>



.. GENERATED FROM PYTHON SOURCE LINES 232-235

Plot induced current density on surface of ladder plate
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Plot the induced current density, ``"Mag_J"``, on the surface of the ladder plate.

.. GENERATED FROM PYTHON SOURCE LINES 235-240

.. code-block:: default


    surflist = modeler.get_object_faces("LadderPlate")
    intrinsic_dict = {"Freq": "50Hz", "Phase": "0deg"}
    M3D.post.create_fieldplot_surface(surflist, "Mag_J", intrinsincDict=intrinsic_dict, plot_name="Mag_J")





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <pyaedt.modules.solutions.FieldPlot object at 0x00000228AA512850>



.. GENERATED FROM PYTHON SOURCE LINES 241-244

Release AEDT
~~~~~~~~~~~~
Release AEDT from the script engine, leaving both AEDT and the project open.

.. GENERATED FROM PYTHON SOURCE LINES 244-246

.. code-block:: default


    M3D.release_desktop(True, True)




.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    True




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 16 minutes  26.756 seconds)


.. _sphx_glr_download_examples_03-Maxwell_Maxwell3DTeam3.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: Maxwell3DTeam3.py <Maxwell3DTeam3.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: Maxwell3DTeam3.ipynb <Maxwell3DTeam3.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
