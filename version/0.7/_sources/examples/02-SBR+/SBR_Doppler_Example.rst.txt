
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples\02-SBR+\SBR_Doppler_Example.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_02-SBR+_SBR_Doppler_Example.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_02-SBR+_SBR_Doppler_Example.py:


SBR+: doppler setup
-------------------
This example shows how you can use PyAEDT to create a multipart scenario in HFSS SBR+
and set up a doppler analysis.

.. GENERATED FROM PYTHON SOURCE LINES 9-12

Perform required imports
~~~~~~~~~~~~~~~~~~~~~~~~
Perform required imports.

.. GENERATED FROM PYTHON SOURCE LINES 12-25

.. code-block:: default


    import os
    import pyaedt

    # Launch AEDT
    # ~~~~~~~~~~~
    # Launch AEDT.

    aedt_version = "2023.2"
    projectname = "MicroDoppler_with_ADP"
    designname = "doppler"
    library_path = pyaedt.downloads.download_multiparts()








.. GENERATED FROM PYTHON SOURCE LINES 26-30

Set non-graphical mode
~~~~~~~~~~~~~~~~~~~~~~
Set non-graphical mode. 
You can set ``non_graphical`` either to ``True`` or ``False``.

.. GENERATED FROM PYTHON SOURCE LINES 30-33

.. code-block:: default


    non_graphical = False








.. GENERATED FROM PYTHON SOURCE LINES 34-37

Download and open project
~~~~~~~~~~~~~~~~~~~~~~~~~
Download and open the project.

.. GENERATED FROM PYTHON SOURCE LINES 37-52

.. code-block:: default


    project_name = pyaedt.generate_unique_project_name(project_name="doppler")

    # Instantiate the application.
    app = pyaedt.Hfss(
        specified_version=aedt_version,
        solution_type="SBR+",
        new_desktop_session=True,
        projectname=project_name,
        close_on_exit=True,
        non_graphical=non_graphical
    )

    app.autosave_disable()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Initializing new desktop!
    C:\actions-runner\_work\_tool\Python\3.10.5\x64\lib\subprocess.py:1070: ResourceWarning: subprocess 8064 is still running
      _warn("subprocess %s is still running" % self.pid,

    True



.. GENERATED FROM PYTHON SOURCE LINES 53-56

Save project and rename design
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Save the project to the temporary folder and rename the design.

.. GENERATED FROM PYTHON SOURCE LINES 56-60

.. code-block:: default


    app.save_project()
    app.rename_design(designname)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    True



.. GENERATED FROM PYTHON SOURCE LINES 61-64

Set up library paths
~~~~~~~~~~~~~~~~~~~~
Set up library paths to 3D components.

.. GENERATED FROM PYTHON SOURCE LINES 64-74

.. code-block:: default


    actor_lib = os.path.join(library_path, "actor_library")
    env_lib = os.path.join(library_path, "environment_library")
    radar_lib = os.path.join(library_path, "radar_modules")
    env_folder = os.path.join(env_lib, "road1")
    person_folder = os.path.join(actor_lib, "person3")
    car_folder = os.path.join(actor_lib, "vehicle1")
    bike_folder = os.path.join(actor_lib, "bike1")
    bird_folder = os.path.join(actor_lib, "bird1")








.. GENERATED FROM PYTHON SOURCE LINES 75-78

Define environment
~~~~~~~~~~~~~~~~~~
Define the background environment.

.. GENERATED FROM PYTHON SOURCE LINES 78-82

.. code-block:: default


    road1 = app.modeler.add_environment(env_folder=env_folder, environment_name="Bari")
    prim = app.modeler








.. GENERATED FROM PYTHON SOURCE LINES 83-87

Place actors
~~~~~~~~~~~~
Place actors in the environment. This code places persons, birds, bikes, and cars
in the environment.

.. GENERATED FROM PYTHON SOURCE LINES 87-111

.. code-block:: default


    person1 = app.modeler.add_person(
        actor_folder=person_folder, speed=1.0, global_offset=[25, 1.5, 0], yaw=180, actor_name="Massimo"
    )
    person2 = app.modeler.add_person(
        actor_folder=person_folder, speed=1.0, global_offset=[25, 2.5, 0], yaw=180, actor_name="Devin"
    )
    car1 = app.modeler.add_vehicle(actor_folder=car_folder, speed=8.7, global_offset=[3, -2.5, 0], actor_name="LuxuryCar")
    bike1 = app.modeler.add_vehicle(
        actor_folder=bike_folder, speed=2.1, global_offset=[24, 3.6, 0], yaw=180, actor_name="Alberto_in_bike"
    )
    bird1 = app.modeler.add_bird(
        actor_folder=bird_folder,
        speed=1.0,
        global_offset=[19, 4, 3],
        yaw=120,
        pitch=-5,
        flapping_rate=30,
        actor_name="Pigeon",
    )
    bird2 = app.modeler.add_bird(
        actor_folder=bird_folder, speed=1.0, global_offset=[6, 2, 3], yaw=-60, pitch=10, actor_name="Eagle"
    )








.. GENERATED FROM PYTHON SOURCE LINES 112-116

Place radar
~~~~~~~~~~~
Place radar on the car. The radar is created relative to the car's coordinate
system.

.. GENERATED FROM PYTHON SOURCE LINES 116-125

.. code-block:: default


    radar1 = app.create_sbr_radar_from_json(
        radar_file=radar_lib,
        radar_name="Example_1Tx_1Rx",
        offset=[2.57, 0, 0.54],
        use_relative_cs=True,
        relative_cs_name=car1.cs_name,
    )








.. GENERATED FROM PYTHON SOURCE LINES 126-131

Create setup
~~~~~~~~~~~~
Create setup and validate it. The ``create_sbr_pulse_doppler_setup`` method
creates a setup and a parametric sweep on the time variable with a
duration of two seconds. The step is computed automatically from CPI.

.. GENERATED FROM PYTHON SOURCE LINES 131-136

.. code-block:: default


    setup, sweep = app.create_sbr_pulse_doppler_setup(sweep_time_duration=2)
    app.set_sbr_current_sources_options()
    app.validate_simple()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    1



.. GENERATED FROM PYTHON SOURCE LINES 137-140

Plot model
~~~~~~~~~~
Plot the model.

.. GENERATED FROM PYTHON SOURCE LINES 140-143

.. code-block:: default


    app.plot(show=False, export_path=os.path.join(app.working_directory, "Image.jpg"), plot_air_objects=True)




.. image-sg:: /examples/02-SBR+/images/sphx_glr_SBR_Doppler_Example_001.png
   :alt: SBR Doppler Example
   :srcset: /examples/02-SBR+/images/sphx_glr_SBR_Doppler_Example_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <pyaedt.generic.plot.ModelPlotter object at 0x000001A9A83C8280>



.. GENERATED FROM PYTHON SOURCE LINES 144-148

Solve and release AEDT
~~~~~~~~~~~~~~~~~~~~~~
Solve and release AEDT. To solve, uncomment the ``app.analyze_setup`` command
to activate the simulation. 

.. GENERATED FROM PYTHON SOURCE LINES 148-152

.. code-block:: default


    # app.analyze_setup(sweep.name)
    app.save_project()
    app.release_desktop(close_projects=True, close_desktop=True)




.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    True




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (9 minutes 57.181 seconds)


.. _sphx_glr_download_examples_02-SBR+_SBR_Doppler_Example.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: SBR_Doppler_Example.py <SBR_Doppler_Example.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: SBR_Doppler_Example.ipynb <SBR_Doppler_Example.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
